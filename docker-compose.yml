services:
  legacy-backend:
    build:
      context: .
      target: production
    container_name: legacy-backend
    restart: always
    ports:
      - '4000:4000'
    environment:
      - NODE_ENV=production
      - PORT=4000
      - MONGO_URI=mongodb://legacyUser:legacyPassword@mongo:27017/legacy?authSource=legacy
      - HOSTNAME=https://legacy-backend.xyz
      - STORAGE_ENDPOINT=sjc1.vultrobjects.com
      - STORAGE_ACCESS_KEY_ID=JC40MMUZZ7NZ4LE9676G
      - STORAGE_SECRET_ACCESS_KEY=rIDqzGLVmqdGkt8ienVDclHvlVlM8DxGAIVSDFHL
      - STORAGE_BUCKET=legacy
      - EXPO_PUSH_TOKEN=ExponentPushToken[a-SnVYGWJ-E5wkALHPrzbE]
      - TWILIO_ACCOUNT_SID=ACec61794448d3b734b04c267ff2374ebc
      - TWILIO_AUTH_TOKEN=ad13e55fb82fad52a52ee4f326fadfc4
      - TWILIO_PHONE=+12514282090
    depends_on:
      - mongo
    networks:
      - legacy-network

  mongo:
    container_name: mongo-legacy
    image: mongo:7.0
    restart: always
    ports:
      - 27017:27017
    networks:
      - legacy-network
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - legacy_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  nginx:
    build:
      dockerfile: Dockerfile
      context: ./nginx
    container_name: nginx-legacy
    restart: always
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - legacy-backend
    networks:
      - legacy-network
    volumes:
      - legacy-cert_certbot-data:/etc/letsencrypt

networks:
  legacy-network:
    name: legacy-network
    driver: bridge

volumes:
  legacy_data:
    name: legacy_data
    driver: local
  legacy-cert_certbot-data:
    external: true
